name: Release for the project
on: 
 push:
  branches: [ main ]
jobs :
# This workflow contains a single job called "build"
 create-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Step 1 - Checkout main branch for Github
        uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Step 2 - Setup a JDK 1.8
        uses: actions/setup-java@v1
        with: 
          java-version: 1.8
          
      - name: Step 3 - Have Github actions build maven project
        run: mvn -B package --file pom.xml
        
      - name: Step 4 - List the current directory
        run: ls -a
      - name: Step 5 - What is the target folder?
        run: |
          cd target 
          ls -a
      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
         name: artifacts
         path: target/postApp.war
 release-project:
  permissions: write-all
  name: Automated project release
  runs-on: ubuntu-latest
  needs: create-build
  steps:
    - name: Download content
      uses: actions/download-artifact@v2
      with:
       name: artifacts
    - name: Test artifact download
      run: ls -R
    - name: Chekout the repo
      uses: actions/checkout@v2
    - name: Print the dir before creating the zip file
      run: dir
    - name: create release
      run: zip -r release.zip .
    - name: Print the dir after created zip file
      run: dir
    - name: Create Github Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release V${{ github.run_number }}  
      
    - name: upload a asset to release attachment
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release.zip
        asset_name: Release.zip
        asset_content_type: application/zip
  
